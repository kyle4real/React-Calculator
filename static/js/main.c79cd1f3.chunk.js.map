{"version":3,"sources":["utilities/commas.js","utilities/precision.js","sound_effects/clear.mp3","sound_effects/equals.mp3","sound_effects/nums.mp3","components/Calculator.js","App.js","index.js"],"names":["regex","commas","str","toString","split","replace","join","precision","num","includes","length","toFixed","Calculator","useState","outputValue","setOutputValue","firstNum","setFirstNum","secondNum","setSecondNum","operator","setOperator","prevEquation","setPrevEquation","handleNum","operatorVisual","e","on","document","querySelector","classList","remove","getElementById","add","handleEquals","answer","a","parseFloat","b","isNaN","equation","operators","handleInput","inputVisual","id","inputSound","numsAudio","innerText","handleOperator","handleDecimal","equalsAudio","clearAudio","type","audio","Audio","pause","currentTime","play","ele","setTimeout","subtract","multiply","divide","className","onClick","target","App","ReactDOM","render","StrictMode"],"mappings":"kKAAMA,EAAQ,qBAUCC,EARA,SAACC,GACZ,GAAKA,EAIL,MAHmB,kBAARA,IAAkBA,EAAMA,EAAIC,aACvCD,EAAMA,EAAIE,MAAM,MACZ,GAAKF,EAAI,GAAGG,QAAQL,EAAO,OACxBE,EAAII,KAAK,MCGLC,EAVG,SAACC,GACf,IAAMN,EAAMM,EAAIL,WAChB,OAAKD,EAAIO,SAAS,MACNP,EAAIE,MAAM,KACd,GAAGM,OAAS,EACTF,EAAIG,QAAQ,GAHQH,GCFpB,MAA0B,kCCA1B,MAA0B,mCCA1B,MAA0B,iC,OC+S1BI,EAvSI,WACf,MAAsCC,mBAAS,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAgCF,mBAAS,MAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAkCJ,mBAAS,MAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAAgCN,mBAAS,MAAzC,mBAAOO,EAAP,KAAiBC,EAAjB,KACA,EAAwCR,mBAAS,MAAjD,mBAAOS,EAAP,KAAqBC,EAArB,KAEMC,EAAY,SAAChB,GACf,IAAKU,IAAcE,EAAU,CAEzB,GADAK,EAAeL,GAAU,GACb,MAARZ,GAA4B,MAAbQ,EAAkB,OAIrC,OAFAD,EADAP,EAAOQ,EAAiBA,EAAWR,EAAjBA,QAElBS,EAAYT,GAGhB,GAAIQ,GAAYI,EAAU,CAEtB,GADAK,EAAeL,GAAU,GACb,MAARZ,GAA6B,MAAdU,EAAmB,OAItC,OAFAH,EADAP,EAAOU,EAAkBA,EAAYV,EAAlBA,QAEnBW,EAAaX,KA0CfiB,EAAiB,SAACC,EAAGC,GACnBA,GACIC,SAASC,cAAc,eACvBD,SAASC,cAAc,cAAcC,UAAUC,OAAO,aAE1DH,SAASI,eAAeN,GAAGI,UAAUG,IAAI,cAErCL,SAASC,cAAc,eACvBD,SAASI,eAAeN,GAAGI,UAAUC,OAAO,cAwBlDG,EAAe,WACjB,IAEIC,EAFEC,EAAIC,WAAWrB,GACfsB,EAAID,WAAWnB,GAErB,GAAKE,EAAL,CAEA,OAAQA,GACJ,IAAK,MACDe,EAASI,MAAMD,GAAKF,EAAIA,EAAIA,EAAIE,EAChC,MACJ,IAAK,WACDH,EAASI,MAAMD,GAAKF,EAAIA,EAAIA,EAAIE,EAChC,MACJ,IAAK,SACDH,EAASI,MAAMD,GAAKF,EAAIA,EAAIA,EAAIE,EAChC,MACJ,IAAK,WACDH,EAASI,MAAMD,GAAKF,EAAIA,EAAIA,EAAIE,EAChC,MACJ,QACIH,EAAS,IAEjBlB,EAAYV,EAAU4B,IACtBd,EAAY,MACZF,EAAa,MACbJ,EAAeR,EAAU4B,IAEzBV,EAAeL,GAAU,GAEzB,IAAMoB,EAAQ,UAAMxB,GAAYf,EAAOe,GAAzB,YAAsCyB,EAAUrB,GAAhD,YACVnB,EAAOiB,IAAcjB,EAAOe,GADlB,OAGdO,EAAgBiB,KAcdE,EAAc,SAAChB,GAEjB,OADAiB,EAAYjB,EAAEkB,IACNlB,EAAEkB,IACN,IAAK,OACL,IAAK,MACL,IAAK,MACL,IAAK,QACL,IAAK,OACL,IAAK,OACL,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,OACDC,EAAWC,GACXtB,EAAUE,EAAEqB,WACZ,MACJ,IAAK,MACL,IAAK,WACL,IAAK,SACL,IAAK,WACDF,EAAWC,GAvIA,SAACpB,GACpB,IAAKV,GAAkB,QAANU,EAIb,OAHAF,EAAU,KACVH,EAAYK,QACZD,EAAeC,GAAG,GAQtB,GALKV,GAAkB,aAANU,IACbX,EAAe,MACfE,EAAY,MAGXD,EAAL,CACA,GAAIA,IAAaE,EACb,OAAIE,GAAkB,aAANM,GACZX,EAAe,MACfI,EAAa,UACbM,EAAeC,GAAG,KAGtBL,EAAYK,QACZD,EAAeC,GAAG,IAEf,GAAIV,GAA0B,MAAdE,EAAmB,CACtC,GAAU,aAANQ,EAAkB,OAItB,OAHAP,EAAa,MACbE,EAAYK,QACZD,EAAeC,GAAG,GAGlBV,GAAYE,IACZgB,IACAb,EAAYK,GACZD,EAAeC,GAAG,KAuGdsB,CAAetB,EAAEkB,IACjB,MACJ,IAAK,UACDC,EAAWC,GAzFD,WAClB,IAAItC,EAEJ,IAAKU,IAAcE,EAAU,CACzB,GAAIJ,GAAYA,EAASP,SAAS,KAAM,OAIxC,OAFAM,EADAP,EAAOQ,EAAkBA,EAAW,IAA9B,WAENC,EAAYT,GAGhB,GAAIQ,GAAYI,EAAU,CACtB,GAAIF,GAAaA,EAAUT,SAAS,KAAM,OAE1CM,EADAP,EAAOU,EAAmBA,EAAY,IAAnB,MAEnBC,EAAaX,IA4ETyC,GACA,MACJ,IAAK,SACDJ,EAAWK,GACXhB,IACA,MACJ,IAAK,QACDW,EAAWM,GA1CnBlC,EAAY,MACZI,EAAY,MACZF,EAAa,MACbJ,EAAe,GAEfU,EAAeL,GAAU,GAEzBG,EAAgB,MAqCR,MACJ,QACI,SAINsB,EAAa,SAACO,GAChB,IAAIC,EAAQ,IAAIC,MAAMF,GACtBC,EAAME,QACNF,EAAMG,YAAc,EACpBH,EAAMI,QAGJd,EAAc,SAACC,GACjB,IAAMc,EAAM9B,SAASI,eAAeY,GAAId,UACxC4B,EAAIzB,IAAI,gBACR0B,YAAW,WACPD,EAAI3B,OAAO,kBACZ,MAGDU,EAAY,CACdR,IAAK,IACL2B,SAAU,IACVC,SAAU,IACVC,OAAQ,KAGZ,OACI,sBAAKC,UAAU,aAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,sBAAKA,UAAU,UAAf,UACI,sBAAKA,UAAU,oBAAf,UACI,sBAAKA,UAAU,qBAAf,UACKzC,GAAgBA,EAChBN,GAAYf,EAAOe,MAExB,qBAAK+C,UAAU,qBAAf,SAAqCtB,EAAUrB,KAC/C,qBAAK2C,UAAU,sBAAf,SAAsC7C,GAAajB,EAAOiB,QAE9D,qBAAK6C,UAAU,iBAAiBnB,GAAG,UAAnC,SACqB,IAAhB9B,EAAoB,EAAIb,EAAOa,UAI5C,qBAAKiD,UAAU,mBAAf,SACI,sBAAKA,UAAU,YAAYnB,GAAG,SAA9B,UACI,qBAAKmB,UAAU,YAAYnB,GAAG,QAAQoB,QAAS,SAACtC,GAAD,OAAOgB,EAAYhB,EAAEuC,SAApE,gBAGA,qBACIF,UAAU,gBACVnB,GAAG,SACHoB,QAAS,SAACtC,GAAD,OAAOgB,EAAYhB,EAAEuC,SAHlC,eAOA,qBACIF,UAAU,kBACVnB,GAAG,WACHoB,QAAS,SAACtC,GAAD,OAAOgB,EAAYhB,EAAEuC,SAHlC,eAOA,qBACIF,UAAU,kBACVnB,GAAG,WACHoB,QAAS,SAACtC,GAAD,OAAOgB,EAAYhB,EAAEuC,SAHlC,eAOA,qBAAKF,UAAU,aAAanB,GAAG,MAAMoB,QAAS,SAACtC,GAAD,OAAOgB,EAAYhB,EAAEuC,SAAnE,eAGA,qBAAKF,UAAU,aAAanB,GAAG,SAASoB,QAAS,SAACtC,GAAD,OAAOgB,EAAYhB,EAAEuC,SAAtE,eAGA,qBAAKF,UAAU,WAAWnB,GAAG,OAAOoB,QAAS,SAACtC,GAAD,OAAOgB,EAAYhB,EAAEuC,SAAlE,eAGA,qBAAKF,UAAU,UAAUnB,GAAG,MAAMoB,QAAS,SAACtC,GAAD,OAAOgB,EAAYhB,EAAEuC,SAAhE,eAGA,qBAAKF,UAAU,UAAUnB,GAAG,MAAMoB,QAAS,SAACtC,GAAD,OAAOgB,EAAYhB,EAAEuC,SAAhE,eAGA,qBAAKF,UAAU,YAAYnB,GAAG,QAAQoB,QAAS,SAACtC,GAAD,OAAOgB,EAAYhB,EAAEuC,SAApE,eAGA,qBAAKF,UAAU,WAAWnB,GAAG,OAAOoB,QAAS,SAACtC,GAAD,OAAOgB,EAAYhB,EAAEuC,SAAlE,eAGA,qBAAKF,UAAU,WAAWnB,GAAG,OAAOoB,QAAS,SAACtC,GAAD,OAAOgB,EAAYhB,EAAEuC,SAAlE,eAGA,qBAAKF,UAAU,UAAUnB,GAAG,MAAMoB,QAAS,SAACtC,GAAD,OAAOgB,EAAYhB,EAAEuC,SAAhE,eAGA,qBAAKF,UAAU,YAAYnB,GAAG,QAAQoB,QAAS,SAACtC,GAAD,OAAOgB,EAAYhB,EAAEuC,SAApE,eAGA,qBAAKF,UAAU,YAAYnB,GAAG,QAAQoB,QAAS,SAACtC,GAAD,OAAOgB,EAAYhB,EAAEuC,SAApE,eAGA,qBAAKF,UAAU,WAAWnB,GAAG,OAAOoB,QAAS,SAACtC,GAAD,OAAOgB,EAAYhB,EAAEuC,SAAlE,eAGA,qBACIF,UAAU,cACVnB,GAAG,UACHoB,QAAS,SAACtC,GAAD,OAAOgB,EAAYhB,EAAEuC,SAHlC,wBCvRLC,MARf,WACI,OACI,mCACI,cAAC,EAAD,OCFZC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJzC,SAASI,eAAe,U","file":"static/js/main.c79cd1f3.chunk.js","sourcesContent":["const regex = /(\\d)(?=(\\d{3})+$)/g;\r\n\r\nconst commas = (str) => {\r\n    if (!str) return;\r\n    if (typeof str !== \"string\") str = str.toString();\r\n    str = str.split(\".\");\r\n    str[0] = str[0].replace(regex, \"$&,\");\r\n    return str.join(\".\");\r\n};\r\n\r\nexport default commas;\r\n","const precision = (num) => {\r\n    const str = num.toString();\r\n    if (!str.includes(\".\")) return num;\r\n    const arr = str.split(\".\");\r\n    if (arr[1].length > 4) {\r\n        return num.toFixed(4);\r\n    }\r\n    return num;\r\n};\r\n\r\nexport default precision;\r\n","export default __webpack_public_path__ + \"static/media/clear.47b0bcd9.mp3\";","export default __webpack_public_path__ + \"static/media/equals.9c1ee9ca.mp3\";","export default __webpack_public_path__ + \"static/media/nums.df81d001.mp3\";","import { useState } from \"react\";\r\nimport commas from \"../utilities/commas\";\r\nimport precision from \"../utilities/precision\";\r\n\r\nimport clearAudio from \"./../sound_effects/clear.mp3\";\r\nimport equalsAudio from \"./../sound_effects/equals.mp3\";\r\nimport numsAudio from \"./../sound_effects/nums.mp3\";\r\n\r\nconst Calculator = () => {\r\n    const [outputValue, setOutputValue] = useState(0);\r\n    const [firstNum, setFirstNum] = useState(null);\r\n    const [secondNum, setSecondNum] = useState(null);\r\n    const [operator, setOperator] = useState(null);\r\n    const [prevEquation, setPrevEquation] = useState(null);\r\n\r\n    const handleNum = (num) => {\r\n        if (!secondNum && !operator) {\r\n            operatorVisual(operator, false);\r\n            if (num === \"0\" && firstNum === \"0\") return;\r\n            num = !firstNum ? num : firstNum + num;\r\n            setOutputValue(num);\r\n            setFirstNum(num);\r\n            return;\r\n        }\r\n        if (firstNum && operator) {\r\n            operatorVisual(operator, false);\r\n            if (num === \"0\" && secondNum === \"0\") return;\r\n            num = !secondNum ? num : secondNum + num;\r\n            setOutputValue(num);\r\n            setSecondNum(num);\r\n            return;\r\n        }\r\n    };\r\n\r\n    const handleOperator = (e) => {\r\n        if (!firstNum && e === \"add\") {\r\n            handleNum(\"0\");\r\n            setOperator(e);\r\n            operatorVisual(e, true);\r\n            return;\r\n        }\r\n        if (!firstNum && e === \"subtract\") {\r\n            setOutputValue(\"-0\");\r\n            setFirstNum(\"-\");\r\n        }\r\n        // if (firstNum === \"-\") return;\r\n        if (!firstNum) return;\r\n        if (firstNum && !secondNum) {\r\n            if (operator && e === \"subtract\") {\r\n                setOutputValue(\"-0\");\r\n                setSecondNum(\"-\");\r\n                operatorVisual(e, false);\r\n                return;\r\n            }\r\n            setOperator(e);\r\n            operatorVisual(e, true);\r\n            return;\r\n        } else if (firstNum && secondNum === \"-\") {\r\n            if (e === \"subtract\") return;\r\n            setSecondNum(null);\r\n            setOperator(e);\r\n            operatorVisual(e, true);\r\n            return;\r\n        }\r\n        if (firstNum && secondNum) {\r\n            handleEquals();\r\n            setOperator(e);\r\n            operatorVisual(e, true);\r\n            return;\r\n        }\r\n    };\r\n    const operatorVisual = (e, on) => {\r\n        if (on) {\r\n            if (document.querySelector(\".currentOp\")) {\r\n                document.querySelector(\".currentOp\").classList.remove(\"currentOp\");\r\n            }\r\n            document.getElementById(e).classList.add(\"currentOp\");\r\n        } else {\r\n            if (document.querySelector(\".currentOp\")) {\r\n                document.getElementById(e).classList.remove(\"currentOp\");\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleDecimal = () => {\r\n        var num;\r\n        // check if first num\r\n        if (!secondNum && !operator) {\r\n            if (firstNum && firstNum.includes(\".\")) return;\r\n            num = !firstNum ? `0.` : firstNum + \".\";\r\n            setOutputValue(num);\r\n            setFirstNum(num);\r\n            return;\r\n        }\r\n        if (firstNum && operator) {\r\n            if (secondNum && secondNum.includes(\".\")) return;\r\n            num = !secondNum ? \"0.\" : secondNum + \".\";\r\n            setOutputValue(num);\r\n            setSecondNum(num);\r\n            return;\r\n        }\r\n    };\r\n\r\n    const handleEquals = () => {\r\n        const a = parseFloat(firstNum);\r\n        const b = parseFloat(secondNum);\r\n        var answer;\r\n        if (!operator) return;\r\n        // if (operator && !secondNum) answer = firstNum + firstNum;\r\n        switch (operator) {\r\n            case \"add\":\r\n                answer = isNaN(b) ? a + a : a + b;\r\n                break;\r\n            case \"subtract\":\r\n                answer = isNaN(b) ? a - a : a - b;\r\n                break;\r\n            case \"divide\":\r\n                answer = isNaN(b) ? a / a : a / b;\r\n                break;\r\n            case \"multiply\":\r\n                answer = isNaN(b) ? a * a : a * b;\r\n                break;\r\n            default:\r\n                answer = 10000;\r\n        }\r\n        setFirstNum(precision(answer));\r\n        setOperator(null);\r\n        setSecondNum(null);\r\n        setOutputValue(precision(answer));\r\n        // visuals\r\n        operatorVisual(operator, false);\r\n        // prev equation\r\n        const equation = `${firstNum && commas(firstNum)} ${operators[operator]} ${\r\n            commas(secondNum) || commas(firstNum)\r\n        } = `;\r\n        setPrevEquation(equation);\r\n    };\r\n\r\n    const handleClear = () => {\r\n        setFirstNum(null);\r\n        setOperator(null);\r\n        setSecondNum(null);\r\n        setOutputValue(0);\r\n        // visuals\r\n        operatorVisual(operator, false);\r\n        // pre equation\r\n        setPrevEquation(null);\r\n    };\r\n\r\n    const handleInput = (e) => {\r\n        inputVisual(e.id);\r\n        switch (e.id) {\r\n            case \"zero\":\r\n            case \"one\":\r\n            case \"two\":\r\n            case \"three\":\r\n            case \"four\":\r\n            case \"five\":\r\n            case \"six\":\r\n            case \"seven\":\r\n            case \"eight\":\r\n            case \"nine\":\r\n                inputSound(numsAudio);\r\n                handleNum(e.innerText);\r\n                break;\r\n            case \"add\":\r\n            case \"subtract\":\r\n            case \"divide\":\r\n            case \"multiply\":\r\n                inputSound(numsAudio);\r\n                handleOperator(e.id);\r\n                break;\r\n            case \"decimal\":\r\n                inputSound(numsAudio);\r\n                handleDecimal();\r\n                break;\r\n            case \"equals\":\r\n                inputSound(equalsAudio);\r\n                handleEquals();\r\n                break;\r\n            case \"clear\":\r\n                inputSound(clearAudio);\r\n                handleClear();\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n    };\r\n\r\n    const inputSound = (type) => {\r\n        var audio = new Audio(type);\r\n        audio.pause();\r\n        audio.currentTime = 0;\r\n        audio.play();\r\n    };\r\n\r\n    const inputVisual = (id) => {\r\n        const ele = document.getElementById(id).classList;\r\n        ele.add(\"currentInput\");\r\n        setTimeout(() => {\r\n            ele.remove(\"currentInput\");\r\n        }, 100);\r\n    };\r\n\r\n    const operators = {\r\n        add: \"+\",\r\n        subtract: \"-\",\r\n        multiply: \"*\",\r\n        divide: \"/\",\r\n    };\r\n\r\n    return (\r\n        <div className=\"calculator\">\r\n            <div className=\"display-container\">\r\n                <div className=\"display\">\r\n                    <div className=\"display-operation\">\r\n                        <div className=\"operation-firstnum\">\r\n                            {prevEquation && prevEquation}\r\n                            {firstNum && commas(firstNum)}\r\n                        </div>\r\n                        <div className=\"operation-operator\">{operators[operator]}</div>\r\n                        <div className=\"operation-secondnum\">{secondNum && commas(secondNum)}</div>\r\n                    </div>\r\n                    <div className=\"display-output\" id=\"display\">\r\n                        {outputValue === 0 ? 0 : commas(outputValue)}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"keypad-container\">\r\n                <div className=\"keys-grid\" id=\"keyPad\">\r\n                    <div className=\"clear pad\" id=\"clear\" onClick={(e) => handleInput(e.target)}>\r\n                        AC\r\n                    </div>\r\n                    <div\r\n                        className=\"divide pad op\"\r\n                        id=\"divide\"\r\n                        onClick={(e) => handleInput(e.target)}\r\n                    >\r\n                        /\r\n                    </div>\r\n                    <div\r\n                        className=\"multiply pad op\"\r\n                        id=\"multiply\"\r\n                        onClick={(e) => handleInput(e.target)}\r\n                    >\r\n                        x\r\n                    </div>\r\n                    <div\r\n                        className=\"subtract pad op\"\r\n                        id=\"subtract\"\r\n                        onClick={(e) => handleInput(e.target)}\r\n                    >\r\n                        -\r\n                    </div>\r\n                    <div className=\"add pad op\" id=\"add\" onClick={(e) => handleInput(e.target)}>\r\n                        +\r\n                    </div>\r\n                    <div className=\"equals pad\" id=\"equals\" onClick={(e) => handleInput(e.target)}>\r\n                        =\r\n                    </div>\r\n                    <div className=\"zero pad\" id=\"zero\" onClick={(e) => handleInput(e.target)}>\r\n                        0\r\n                    </div>\r\n                    <div className=\"one pad\" id=\"one\" onClick={(e) => handleInput(e.target)}>\r\n                        1\r\n                    </div>\r\n                    <div className=\"two pad\" id=\"two\" onClick={(e) => handleInput(e.target)}>\r\n                        2\r\n                    </div>\r\n                    <div className=\"three pad\" id=\"three\" onClick={(e) => handleInput(e.target)}>\r\n                        3\r\n                    </div>\r\n                    <div className=\"four pad\" id=\"four\" onClick={(e) => handleInput(e.target)}>\r\n                        4\r\n                    </div>\r\n                    <div className=\"five pad\" id=\"five\" onClick={(e) => handleInput(e.target)}>\r\n                        5\r\n                    </div>\r\n                    <div className=\"six pad\" id=\"six\" onClick={(e) => handleInput(e.target)}>\r\n                        6\r\n                    </div>\r\n                    <div className=\"seven pad\" id=\"seven\" onClick={(e) => handleInput(e.target)}>\r\n                        7\r\n                    </div>\r\n                    <div className=\"eight pad\" id=\"eight\" onClick={(e) => handleInput(e.target)}>\r\n                        8\r\n                    </div>\r\n                    <div className=\"nine pad\" id=\"nine\" onClick={(e) => handleInput(e.target)}>\r\n                        9\r\n                    </div>\r\n                    <div\r\n                        className=\"decimal pad\"\r\n                        id=\"decimal\"\r\n                        onClick={(e) => handleInput(e.target)}\r\n                    >\r\n                        .\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Calculator;\r\n","import \"./App.css\";\nimport Calculator from \"./components/Calculator\";\n\nfunction App() {\n    return (\n        <>\n            <Calculator />\n        </>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}